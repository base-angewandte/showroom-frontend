{
  "openapi": "3.0.3",
  "info": {
    "title": "Showroom API v1",
    "version": "1.0.0 (v1)",
    "description": "Provides public access to all activities published to *Showroom*, as well as authenticated access\n    for users and repositories to publish and update activites, create and maintain albums. For a general project\n    description visit the [Portfolio/Showroom website](https://portfolio-showroom.ac.at), for the sources and\n    documentation of this component go to **TODO:insertlinktogithubrepo**.\n    "
  },
  "paths": {
    "/api/v1/activities/": {
      "post": {
        "operationId": "api_v1_activities_create",
        "description": "",
        "tags": [
          "repo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Activity"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Activity"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Activity"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Something with your request is wrong. This message should provide more details."
                    }
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  }
                }
              }
            },
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/activities/{id}/": {
      "get": {
        "operationId": "api_v1_activities_retrieve",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this activity.",
            "required": true
          }
        ],
        "tags": [
          "public"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Not found."
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "operationId": "api_v1_activities_destroy",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "The source repo's id for this activity",
            "required": true
          }
        ],
        "tags": [
          "repo"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Something with your request is wrong. This message should provide more details."
                    }
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  }
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Not found."
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/activities/{id}/media/": {
      "get": {
        "operationId": "api_v1_activities_media_list",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this activity.",
            "required": true
          }
        ],
        "tags": [
          "public"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Media"
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Not found."
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/activities/{id}/relations/": {
      "post": {
        "operationId": "api_v1_activities_relations_create",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "The source repo's id for this activity",
            "required": true
          }
        ],
        "tags": [
          "repo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityRelation"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/ActivityRelation"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ActivityRelation"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "description": "The relationship was successfully added."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Something with your request is wrong. This message should provide more details."
                    }
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Not found."
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/albums/": {
      "post": {
        "operationId": "api_v1_albums_create",
        "description": "",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Album"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Album"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Album"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Album"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Something with your request is wrong. This message should provide more details."
                    }
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  }
                }
              }
            },
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/albums/{id}/": {
      "get": {
        "operationId": "api_v1_albums_retrieve",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this album.",
            "required": true
          }
        ],
        "tags": [
          "public"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Album"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Not found."
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "operationId": "api_v1_albums_partial_update",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this album.",
            "required": true
          }
        ],
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAlbum"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAlbum"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedAlbum"
              }
            }
          }
        },
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Album"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Something with your request is wrong. This message should provide more details."
                    }
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  }
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Not found."
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "operationId": "api_v1_albums_destroy",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this album.",
            "required": true
          }
        ],
        "tags": [
          "auth"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Something with your request is wrong. This message should provide more details."
                    }
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  }
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Not found."
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/autocomplete/": {
      "post": {
        "operationId": "api_v1_autocomplete_create",
        "description": "Retrieves available autocomplete results for a specific string and\nfilter.",
        "tags": [
          "public"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutocompleteRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AutocompleteRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/AutocompleteRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutocompleteItem"
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/entities/": {
      "post": {
        "operationId": "api_v1_entities_create",
        "description": "",
        "tags": [
          "repo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Entity"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Entity"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Entity"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entity"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Something with your request is wrong. This message should provide more details."
                    }
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  }
                }
              }
            },
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/entities/{id}/": {
      "get": {
        "operationId": "api_v1_entities_retrieve",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this entity.",
            "required": true
          }
        ],
        "tags": [
          "public"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Entity"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Not found."
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "operationId": "api_v1_entities_partial_update",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this entity.",
            "required": true
          }
        ],
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEntity"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEntity"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEntity"
              }
            }
          }
        },
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Something with your request is wrong. This message should provide more details."
                    }
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  }
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/entities/{id}/edit/": {
      "get": {
        "operationId": "api_v1_entities_edit_retrieve",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this entity.",
            "required": true
          },
          {
            "in": "query",
            "name": "secondary_details",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Whether to include secondary_details in the response"
          },
          {
            "in": "query",
            "name": "showcase",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Whether to include showcase in the response"
          }
        ],
        "tags": [
          "auth"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityEdit"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  }
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Not found."
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "operationId": "api_v1_entities_edit_partial_update",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this entity.",
            "required": true
          }
        ],
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEntityEdit"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEntityEdit"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/PatchedEntityEdit"
              }
            }
          }
        },
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityEdit"
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  }
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Not found."
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/entities/{id}/list/": {
      "get": {
        "operationId": "api_v1_entities_list_retrieve",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this entity.",
            "required": true
          }
        ],
        "tags": [
          "public"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonList"
                }
              }
            },
            "description": "a list of things"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Not found."
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/entities/{id}/search/": {
      "post": {
        "operationId": "api_v1_entities_search_create",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "A unique value identifying this entity.",
            "required": true
          }
        ],
        "tags": [
          "public"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Entity"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Entity"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Entity"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchResult"
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Not found."
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/filters/": {
      "get": {
        "operationId": "api_v1_filters_list",
        "description": "Get all the available filters that can be used in search and\nautocomplete.",
        "parameters": [
          {
            "in": "header",
            "name": "Accept-Language",
            "schema": {
              "type": "string",
              "default": "en"
            },
            "description": "The ISO 2 letter language code to use for localisation"
          }
        ],
        "tags": [
          "public"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Filter"
                  }
                },
                "examples": {
                  "Activities,Persons,DateRangeAndKeywordsFilter": {
                    "value": [
                      {
                        "id": "activities",
                        "label": "Activities",
                        "type": "text"
                      },
                      {
                        "id": "persons",
                        "label": "Persons",
                        "type": "text"
                      },
                      {
                        "id": "date_range",
                        "label": "Date Range",
                        "type": "daterange"
                      },
                      {
                        "id": "keywords",
                        "type": "chios",
                        "label": "Keywords",
                        "freetext_allowed": false,
                        "options": [
                          {
                            "id": "Assemblage",
                            "label": "Assemblage"
                          },
                          {
                            "id": "Community Radio",
                            "label": "Community Radio"
                          },
                          {
                            "id": "Explosion Research",
                            "label": "Explosion Research"
                          }
                        ]
                      }
                    ],
                    "summary": "Activities, persons, date range and keywords filter"
                  }
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/initial/": {
      "get": {
        "operationId": "api_v1_initial_list",
        "description": "Initial Landing Page request, delivering \"search results\" and carousel\ndata.",
        "tags": [
          "public"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InitialData"
                  }
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Not found."
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/initial/{id}/": {
      "get": {
        "operationId": "api_v1_initial_retrieve",
        "description": "Initial Landing Page request, delivering \"search results\" and carousel\ndata.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "ShortUUID of the entity for which initial data should be presented",
            "required": true
          }
        ],
        "tags": [
          "public"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitialData"
                }
              }
            },
            "description": ""
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Not found."
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/media/": {
      "post": {
        "operationId": "api_v1_media_create",
        "description": "",
        "tags": [
          "repo"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Media"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Media"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Media"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Media"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Something with your request is wrong. This message should provide more details."
                    }
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  }
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Not found."
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/media/{id}/": {
      "delete": {
        "operationId": "api_v1_media_destroy",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "description": "The source repo's id for this activity",
            "required": true
          }
        ],
        "tags": [
          "repo"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "No response body"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Something with your request is wrong. This message should provide more details."
                    }
                  }
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  }
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Not found."
                    }
                  }
                }
              }
            },
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/schema/openapi3.json": {
      "get": {
        "operationId": "api_v1_schema_openapi3.json_retrieve",
        "description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
        "parameters": [
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string",
              "enum": [
                "de",
                "en"
              ]
            }
          }
        ],
        "tags": [
          "api"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.oai.openapi+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/schema/openapi3.yaml": {
      "get": {
        "operationId": "api_v1_schema_openapi3.yaml_retrieve",
        "description": "OpenApi3 schema for this API. Format can be selected via content negotiation.\n\n- YAML: application/vnd.oai.openapi\n- JSON: application/vnd.oai.openapi+json",
        "parameters": [
          {
            "in": "query",
            "name": "format",
            "schema": {
              "type": "string",
              "enum": [
                "json",
                "yaml"
              ]
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string",
              "enum": [
                "de",
                "en"
              ]
            }
          }
        ],
        "tags": [
          "api"
        ],
        "security": [
          {
            "cookieAuth": []
          },
          {}
        ],
        "responses": {
          "200": {
            "content": {
              "application/vnd.oai.openapi": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/yaml": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/vnd.oai.openapi+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            },
            "description": ""
          }
        }
      }
    },
    "/api/v1/search/": {
      "post": {
        "operationId": "api_v1_search_create",
        "description": "Submit a search to Showroom.",
        "tags": [
          "public"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            },
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "basicAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResult"
                }
              }
            },
            "description": ""
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Something with your request is wrong. This message should provide more details."
                    }
                  }
                }
              }
            },
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/user/": {
      "get": {
        "operationId": "api_v1_user_retrieve",
        "description": "",
        "tags": [
          "auth"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserData"
                },
                "examples": {
                  "WithAssociatedEntityId": {
                    "value": {
                      "id": "0123456789ABCDEF0123456789ABCDEF",
                      "name": "Firstname Lastname",
                      "email": "addy@example.org",
                      "entry_id": "xZy2345aceg98QPT0246aC",
                      "groups": [
                        "foo_users",
                        "bar_members"
                      ],
                      "permissions": [
                        "view_foo",
                        "view_bar",
                        "edit_bar"
                      ]
                    },
                    "summary": "With associated entity_id"
                  },
                  "WithoutAssociatedEntityId": {
                    "value": {
                      "id": "0123456789ABCDEF0123456789ABCDEF",
                      "name": "Firstname Lastname",
                      "email": "addy@example.org",
                      "entry_id": null,
                      "groups": [
                        "foo_users",
                        "bar_members"
                      ],
                      "permissions": [
                        "view_foo",
                        "view_bar",
                        "edit_bar"
                      ]
                    },
                    "summary": "Without associated entity_id"
                  }
                }
              }
            },
            "description": ""
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "Error": {
                    "value": {
                      "detail": "Authentication credentials were not provided."
                    }
                  }
                }
              }
            },
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Activity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "subtext": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "list": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "primary_details": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "secondary_details": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "locations": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "source_repo": {
            "type": "integer",
            "maximum": 32767
          },
          "source_repo_entry_id": {
            "type": "string",
            "maxLength": 255
          },
          "source_repo_owner_id": {
            "type": "string",
            "maxLength": 255
          },
          "source_repo_data": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "featured_media": {
            "type": "string",
            "nullable": true
          },
          "belongs_to": {
            "type": "string",
            "nullable": true
          },
          "relations_to": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "keywords": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "source_repo_data_text": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "source_repo",
          "source_repo_entry_id",
          "source_repo_owner_id",
          "title"
        ]
      },
      "ActivityRelation": {
        "type": "object",
        "properties": {
          "activity_id": {
            "type": "string"
          }
        },
        "required": [
          "activity_id"
        ]
      },
      "Album": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "subtitle": {
            "type": "string",
            "maxLength": 255
          },
          "secondary_details": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "belongs_to": {
            "type": "string"
          },
          "activities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "activities",
          "belongs_to",
          "id",
          "subtitle",
          "title"
        ]
      },
      "AutocompleteItem": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string"
          },
          "label": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AutocompleteItemData"
            }
          }
        },
        "required": [
          "data",
          "label",
          "source"
        ]
      },
      "AutocompleteItemData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "subtext": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "subtext",
          "title"
        ]
      },
      "AutocompleteRequest": {
        "type": "object",
        "properties": {
          "q": {
            "type": "string"
          },
          "filter_id": {
            "type": "string",
            "default": "activities"
          },
          "limit": {
            "type": "integer"
          }
        },
        "required": [
          "q"
        ]
      },
      "ChipsFilterOptions": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The non-localised default value"
          },
          "label": {
            "type": "string",
            "description": "The localised label of this value"
          }
        },
        "required": [
          "id",
          "label"
        ]
      },
      "CommonList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "labels": {
            "type": "string"
          },
          "hidden": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "a recursive CommonList entry"
                },
                {
                  "type": "object",
                  "description": "a CommonListItem without any further recursion",
                  "properties": {
                    "attributes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "value": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                }
              ]
            }
          }
        },
        "required": [
          "data",
          "id",
          "labels"
        ]
      },
      "CommonText": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "string",
                  "example": "A generic standalone label"
                },
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": [
                    "Item 1",
                    "Item 2",
                    "Item 3"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "label": {
                      "type": "string",
                      "example": "www",
                      "description": "A label prefix"
                    },
                    "value": {
                      "type": "string",
                      "example": "example.org",
                      "description": "The actual label content"
                    },
                    "url": {
                      "type": "string",
                      "example": "https://example.org",
                      "description": "An optional link for this item"
                    },
                    "source": {
                      "type": "string",
                      "example": "jane-doe-d2JnH6L5WAdj7sQzZTRhUC",
                      "description": "An optional internal object (e.g. entity) id"
                    },
                    "additional": {
                      "type": "array",
                      "description": "Optional list of labels for a tooltip",
                      "items": {
                        "type": "object",
                        "properties": {
                          "label": {
                            "type": "string",
                            "example": "Weblink"
                          },
                          "value": {
                            "type": "string",
                            "example": "example.org"
                          },
                          "url": {
                            "type": "string",
                            "example": "https://example.com"
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "label",
                    "value"
                  ]
                }
              ]
            }
          },
          "language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Language"
              }
            ],
            "description": "This property will only be set, if the requested language could not be found"
          }
        },
        "required": [
          "data",
          "label",
          "language"
        ]
      },
      "Entity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "subtext": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "list": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "primary_details": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "secondary_details": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "locations": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "source_repo": {
            "type": "integer",
            "maximum": 32767
          },
          "source_repo_entry_id": {
            "type": "string",
            "maxLength": 255
          },
          "type": {
            "$ref": "#/components/schemas/EntityTypeEnum"
          },
          "expertise": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "showcase": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "photo": {
            "type": "string",
            "maxLength": 255
          },
          "parent": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "source_repo",
          "source_repo_entry_id",
          "title",
          "type"
        ]
      },
      "EntityEdit": {
        "type": "object",
        "properties": {
          "secondary_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntitySecondaryDetailsEdit"
            }
          },
          "showcase": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityShowcaseEdit"
            }
          }
        }
      },
      "EntitySecondaryDetailsEdit": {
        "type": "object",
        "properties": {
          "en": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonText"
            }
          },
          "de": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonText"
            }
          },
          "xx": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommonText"
            }
          }
        }
      },
      "EntityShowcaseEdit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "The type of showcase object (activity, album, entity). Defaults to activity, if not specified"
          }
        },
        "required": [
          "id"
        ]
      },
      "EntityTypeEnum": {
        "enum": [
          "P",
          "I",
          "D"
        ],
        "type": "string"
      },
      "Error": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string",
            "description": "A message describing the error"
          }
        },
        "required": [
          "detail"
        ]
      },
      "Filter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The label to identify this filter in search queries"
          },
          "type": {
            "$ref": "#/components/schemas/FilterTypes"
          },
          "label": {
            "type": "string",
            "description": "Localised label for this filter"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChipsFilterOptions"
            },
            "description": "All selectable options in case of a chips type filter"
          },
          "freetext_allowed": {
            "type": "boolean",
            "description": "In case of a chips type filter, whether only the provided options can be searched for or freetext is allowed additionally"
          }
        },
        "required": [
          "id",
          "label",
          "type"
        ]
      },
      "FilterTypes": {
        "type": "string",
        "enum": [
          "text",
          "date",
          "daterange",
          "chips"
        ]
      },
      "InitialData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Entity ID of the institution managing the start page"
          },
          "source_institution": {
            "$ref": "#/components/schemas/SearchItemSourceInstitution"
          },
          "showcase": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            },
            "description": "The showcase object of the entity referred by ID, which is displayed as the start page carousel"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InitialSearchResult"
            },
            "description": "The data needed for initial display of recent events, starred items, etc. and information about the filter used in that category"
          }
        },
        "required": [
          "id",
          "results",
          "showcase",
          "source_institution"
        ]
      },
      "InitialSearchResult": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "total": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchItem"
            }
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchFilter"
            }
          }
        },
        "required": [
          "data",
          "filters",
          "label",
          "total"
        ]
      },
      "Language": {
        "type": "object",
        "properties": {
          "iso": {
            "type": "string",
            "description": "The ISO 2 letter code for the language this content was returned in"
          },
          "label": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LanguageLabel"
              }
            ],
            "description": "Contains all available translations of the label that should be used if the language of the content is to be rendered."
          }
        },
        "required": [
          "iso",
          "label"
        ]
      },
      "LanguageLabel": {
        "type": "object",
        "properties": {
          "en": {
            "type": "string"
          },
          "de": {
            "type": "string"
          },
          "xx": {
            "type": "string"
          }
        },
        "required": [
          "de",
          "en",
          "xx"
        ]
      },
      "Media": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "type": {
            "$ref": "#/components/schemas/MediaTypeEnum"
          },
          "file": {
            "type": "string",
            "maxLength": 255
          },
          "activity": {
            "type": "string"
          },
          "mime_type": {
            "type": "string",
            "maxLength": 255
          },
          "exif": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "license": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "specifics": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "source_repo_media_id": {
            "type": "string",
            "maxLength": 255
          }
        },
        "required": [
          "activity",
          "file",
          "id",
          "mime_type",
          "source_repo_media_id",
          "type"
        ]
      },
      "MediaTypeEnum": {
        "enum": [
          "i",
          "a",
          "v",
          "d",
          "x"
        ],
        "type": "string"
      },
      "PatchedAlbum": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "subtitle": {
            "type": "string",
            "maxLength": 255
          },
          "secondary_details": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "belongs_to": {
            "type": "string"
          },
          "activities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PatchedEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "maxLength": 255
          },
          "subtext": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "list": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "primary_details": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "secondary_details": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "locations": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "source_repo": {
            "type": "integer",
            "maximum": 32767
          },
          "source_repo_entry_id": {
            "type": "string",
            "maxLength": 255
          },
          "type": {
            "$ref": "#/components/schemas/EntityTypeEnum"
          },
          "expertise": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "showcase": {
            "type": "object",
            "additionalProperties": {},
            "nullable": true
          },
          "photo": {
            "type": "string",
            "maxLength": 255
          },
          "parent": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PatchedEntityEdit": {
        "type": "object",
        "properties": {
          "secondary_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntitySecondaryDetailsEdit"
            }
          },
          "showcase": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityShowcaseEdit"
            }
          }
        }
      },
      "SearchFilter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "id of the filter as obtained from the /filters endpoint"
          },
          "filter_values": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {}
            },
            "description": "Array of either strings, dates, date ranges or a chips options. Multiple values will be combined in a logical OR."
          }
        },
        "required": [
          "filter_values",
          "id"
        ]
      },
      "SearchItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "subtitle": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "alternative_text": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "image_url": {
            "type": "string",
            "format": "uri"
          },
          "source_institution": {
            "$ref": "#/components/schemas/SearchItemSourceInstitution"
          },
          "score": {
            "type": "integer"
          }
        },
        "required": [
          "alternative_text",
          "description",
          "id",
          "image_url",
          "score",
          "source_institution",
          "subtitle",
          "title",
          "type"
        ]
      },
      "SearchItemSourceInstitution": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Name of institution"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "URL to institution or the institution's showroom page"
          },
          "icon": {
            "type": "string",
            "format": "uri",
            "description": "Path to the institution's icon file"
          }
        },
        "required": [
          "icon",
          "label",
          "url"
        ]
      },
      "SearchRequest": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchFilter"
            },
            "description": "Array of logical AND filters that should be applied to the search."
          },
          "limit": {
            "type": "integer"
          },
          "offset": {
            "type": "integer"
          }
        },
        "required": [
          "filters"
        ]
      },
      "SearchResult": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "total": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchItem"
            }
          }
        },
        "required": [
          "data",
          "label",
          "total"
        ]
      },
      "UserData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The user id in the auth backend (i.e. source repo)"
          },
          "name": {
            "type": "string",
            "description": "The display name of the user"
          },
          "email": {
            "type": "string",
            "description": "The user's e-mail address"
          },
          "entry_id": {
            "type": "string",
            "description": "The user's associated showroom entity id. Or null, if no associated showroom entity can be found"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The groups this user belongs to."
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The permissions this user has."
          }
        },
        "required": [
          "email",
          "entry_id",
          "groups",
          "id",
          "name",
          "permissions"
        ]
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "Session"
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:9001/",
      "description": "The local mock server"
    }
  ],
  "tags": [
    {
      "name": "public"
    },
    {
      "name": "auth"
    },
    {
      "name": "repo"
    },
    {
      "name": "api"
    }
  ]
}
